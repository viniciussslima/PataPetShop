name: testWorkflow
on:
  push:
    branches:
      - dev
      - main
jobs:
  createUser:
    name: Create user
    runs-on: ubuntu-latest
    services:
      mydb:
        image: mysql
        env:
          MYSQL_ROOT_PASSWORD: 1234
          MYSQL_DATABASE: PataPetShop
        options: --name mydb --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=5
        ports:
          - 3306:3306
    strategy:
      matrix:
        node-version: [14.x]
    steps:
      - uses: actions/checkout@v2
      - run: git fetch --prune --unshallow

      - name: migration
        run: docker exec -i mydb mysql -uroot -p1234 < tests/mysql/auth/createUser.sql

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: yarn --frozen-lockfile

      - name: Run all tests
        run: yarn test createUser
  login:
    name: Login
    runs-on: ubuntu-latest
    services:
      mydb:
        image: mysql
        env:
          MYSQL_ROOT_PASSWORD: 1234
          MYSQL_DATABASE: PataPetShop
        options: --name mydb --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=5
        ports:
          - 3306:3306
    strategy:
      matrix:
        node-version: [14.x]
    steps:
      - uses: actions/checkout@v2
      - run: git fetch --prune --unshallow

      - name: migration
        run: docker exec -i mydb mysql -uroot -p1234 < tests/mysql/auth/login.sql

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: yarn --frozen-lockfile

      - name: Run all tests
        run: yarn test login
  logout:
    name: Logout
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
    steps:
      - uses: actions/checkout@v2
      - run: git fetch --prune --unshallow

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: yarn --frozen-lockfile

      - name: Run all tests
        run: yarn test logout
  getUser:
    name: Get user
    runs-on: ubuntu-latest
    services:
      mydb:
        image: mysql
        env:
          MYSQL_ROOT_PASSWORD: 1234
          MYSQL_DATABASE: PataPetShop
        options: --name mydb --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=5
        ports:
          - 3306:3306
    strategy:
      matrix:
        node-version: [14.x]
    steps:
      - uses: actions/checkout@v2
      - run: git fetch --prune --unshallow

      - name: migration
        run: docker exec -i mydb mysql -uroot -p1234 < tests/mysql/user/getUser.sql

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: yarn --frozen-lockfile

      - name: Run all tests
        run: yarn test getUser
  updateUser:
    name: Update user
    runs-on: ubuntu-latest
    services:
      mydb:
        image: mysql
        env:
          MYSQL_ROOT_PASSWORD: 1234
          MYSQL_DATABASE: PataPetShop
        options: --name mydb --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=5
        ports:
          - 3306:3306
    strategy:
      matrix:
        node-version: [14.x]
    steps:
      - uses: actions/checkout@v2
      - run: git fetch --prune --unshallow

      - name: migration
        run: docker exec -i mydb mysql -uroot -p1234 < tests/mysql/user/updateUser.sql

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: yarn --frozen-lockfile

      - name: Run all tests
        run: yarn test updateUser
  deleteUser:
    name: Delete user
    runs-on: ubuntu-latest
    services:
      mydb:
        image: mysql
        env:
          MYSQL_ROOT_PASSWORD: 1234
          MYSQL_DATABASE: PataPetShop
        options: --name mydb --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=5
        ports:
          - 3306:3306
    strategy:
      matrix:
        node-version: [14.x]
    steps:
      - uses: actions/checkout@v2
      - run: git fetch --prune --unshallow

      - name: migration
        run: docker exec -i mydb mysql -uroot -p1234 < tests/mysql/user/deleteUser.sql

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: yarn --frozen-lockfile

      - name: Run all tests
        run: yarn test deleteUser
  updatePassword:
    name: Update user password
    runs-on: ubuntu-latest
    services:
      mydb:
        image: mysql
        env:
          MYSQL_ROOT_PASSWORD: 1234
          MYSQL_DATABASE: PataPetShop
        options: --name mydb --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=5
        ports:
          - 3306:3306
    strategy:
      matrix:
        node-version: [14.x]
    steps:
      - uses: actions/checkout@v2
      - run: git fetch --prune --unshallow

      - name: migration
        run: docker exec -i mydb mysql -uroot -p1234 < tests/mysql/user/updatePassword.sql

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: yarn --frozen-lockfile

      - name: Run all tests
        run: yarn test updatePassword
  createProduct:
    name: Create product
    runs-on: ubuntu-latest
    services:
      mydb:
        image: mysql
        env:
          MYSQL_ROOT_PASSWORD: 1234
          MYSQL_DATABASE: PataPetShop
        options: --name mydb --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=5
        ports:
          - 3306:3306
    strategy:
      matrix:
        node-version: [14.x]
    steps:
      - uses: actions/checkout@v2
      - run: git fetch --prune --unshallow

      - name: migration
        run: docker exec -i mydb mysql -uroot -p1234 < tests/mysql/product/createProduct.sql

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: yarn --frozen-lockfile

      - name: Run all tests
        run: yarn test createProduct
  deleteProduct:
    name: Delete product
    runs-on: ubuntu-latest
    services:
      mydb:
        image: mysql
        env:
          MYSQL_ROOT_PASSWORD: 1234
          MYSQL_DATABASE: PataPetShop
        options: --name mydb --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=5
        ports:
          - 3306:3306
    strategy:
      matrix:
        node-version: [14.x]
    steps:
      - uses: actions/checkout@v2
      - run: git fetch --prune --unshallow

      - name: migration
        run: docker exec -i mydb mysql -uroot -p1234 < tests/mysql/product/deleteProduct.sql

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: yarn --frozen-lockfile

      - name: Run all tests
        run: yarn test deleteProduct
  getProduct:
    name: Get product
    runs-on: ubuntu-latest
    services:
      mydb:
        image: mysql
        env:
          MYSQL_ROOT_PASSWORD: 1234
          MYSQL_DATABASE: PataPetShop
        options: --name mydb --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=5
        ports:
          - 3306:3306
    strategy:
      matrix:
        node-version: [14.x]
    steps:
      - uses: actions/checkout@v2
      - run: git fetch --prune --unshallow

      - name: migration
        run: docker exec -i mydb mysql -uroot -p1234 < tests/mysql/product/getProduct.sql

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: yarn --frozen-lockfile

      - name: Run all tests
        run: yarn test getProduct
  updateProduct:
    name: Update product
    runs-on: ubuntu-latest
    services:
      mydb:
        image: mysql
        env:
          MYSQL_ROOT_PASSWORD: 1234
          MYSQL_DATABASE: PataPetShop
        options: --name mydb --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=5
        ports:
          - 3306:3306
    strategy:
      matrix:
        node-version: [14.x]
    steps:
      - uses: actions/checkout@v2
      - run: git fetch --prune --unshallow

      - name: migration
        run: docker exec -i mydb mysql -uroot -p1234 < tests/mysql/product/updateProduct.sql

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: yarn --frozen-lockfile

      - name: Run all tests
        run: yarn test updateProduct
  addProductOnCart:
    name: Add product on cart
    runs-on: ubuntu-latest
    services:
      mydb:
        image: mysql
        env:
          MYSQL_ROOT_PASSWORD: 1234
          MYSQL_DATABASE: PataPetShop
        options: --name mydb --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=5
        ports:
          - 3306:3306
    strategy:
      matrix:
        node-version: [14.x]
    steps:
      - uses: actions/checkout@v2
      - run: git fetch --prune --unshallow

      - name: migration
        run: docker exec -i mydb mysql -uroot -p1234 < tests/mysql/product/addProduct.sql

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: yarn --frozen-lockfile

      - name: Run all tests
        run: yarn test addProduct
  getCart:
    name: Get cart
    runs-on: ubuntu-latest
    services:
      mydb:
        image: mysql
        env:
          MYSQL_ROOT_PASSWORD: 1234
          MYSQL_DATABASE: PataPetShop
        options: --name mydb --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=5
        ports:
          - 3306:3306
    strategy:
      matrix:
        node-version: [14.x]
    steps:
      - uses: actions/checkout@v2
      - run: git fetch --prune --unshallow

      - name: migration
        run: docker exec -i mydb mysql -uroot -p1234 < tests/mysql/product/getCart.sql

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: yarn --frozen-lockfile

      - name: Run all tests
        run: yarn test getCart
  deleteAllProductsOnCart:
    name: Delete all products on cart
    runs-on: ubuntu-latest
    services:
      mydb:
        image: mysql
        env:
          MYSQL_ROOT_PASSWORD: 1234
          MYSQL_DATABASE: PataPetShop
        options: --name mydb --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=5
        ports:
          - 3306:3306
    strategy:
      matrix:
        node-version: [14.x]
    steps:
      - uses: actions/checkout@v2
      - run: git fetch --prune --unshallow

      - name: migration
        run: docker exec -i mydb mysql -uroot -p1234 < tests/mysql/product/deleteAllProducts.sql

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: yarn --frozen-lockfile

      - name: Run all tests
        run: yarn test deleteAllProducts
  deleteOneProductOnCart:
    name: Delete one product on cart
    runs-on: ubuntu-latest
    services:
      mydb:
        image: mysql
        env:
          MYSQL_ROOT_PASSWORD: 1234
          MYSQL_DATABASE: PataPetShop
        options: --name mydb --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=5
        ports:
          - 3306:3306
    strategy:
      matrix:
        node-version: [14.x]
    steps:
      - uses: actions/checkout@v2
      - run: git fetch --prune --unshallow

      - name: migration
        run: docker exec -i mydb mysql -uroot -p1234 < tests/mysql/product/deleteOneProduct.sql

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: yarn --frozen-lockfile

      - name: Run all tests
        run: yarn test deleteOneProduct
  buyPartOne:
    name: Buy part 1
    runs-on: ubuntu-latest
    services:
      mydb:
        image: mysql
        env:
          MYSQL_ROOT_PASSWORD: 1234
          MYSQL_DATABASE: PataPetShop
        options: --name mydb --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=5
        ports:
          - 3306:3306
    strategy:
      matrix:
        node-version: [14.x]
    steps:
      - uses: actions/checkout@v2
      - run: git fetch --prune --unshallow

      - name: migration
        run: docker exec -i mydb mysql -uroot -p1234 < tests/mysql/product/buy1.sql

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: yarn --frozen-lockfile

      - name: Run all tests
        run: yarn test buy1
  buyPartTwo:
    name: Buy part 2
    runs-on: ubuntu-latest
    services:
      mydb:
        image: mysql
        env:
          MYSQL_ROOT_PASSWORD: 1234
          MYSQL_DATABASE: PataPetShop
        options: --name mydb --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=5
        ports:
          - 3306:3306
    strategy:
      matrix:
        node-version: [14.x]
    steps:
      - uses: actions/checkout@v2
      - run: git fetch --prune --unshallow

      - name: migration
        run: docker exec -i mydb mysql -uroot -p1234 < tests/mysql/product/buy2.sql

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: yarn --frozen-lockfile

      - name: Run all tests
        run: yarn test buy2
  buyPartThree:
    name: Buy part 3
    runs-on: ubuntu-latest
    services:
      mydb:
        image: mysql
        env:
          MYSQL_ROOT_PASSWORD: 1234
          MYSQL_DATABASE: PataPetShop
        options: --name mydb --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=5
        ports:
          - 3306:3306
    strategy:
      matrix:
        node-version: [14.x]
    steps:
      - uses: actions/checkout@v2
      - run: git fetch --prune --unshallow

      - name: migration
        run: docker exec -i mydb mysql -uroot -p1234 < tests/mysql/product/buy3.sql

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: yarn --frozen-lockfile

      - name: Run all tests
        run: yarn test buy3
